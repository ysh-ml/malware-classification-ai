import streamlit as st
import pandas as pd
import numpy as np
from pathlib import Path
import tempfile
import sklearn
from joblib import load
from parse_pe import parse_PE

st.title('Malware Dectector AI Project')
uploaded_file  = st.file_uploader('choose exe file to upload',type='exe')
if uploaded_file is not None:
    # make temp file path from uploaded file
    with tempfile.NamedTemporaryFile(delete=False) as tmp_file:
        fp = Path(tmp_file.name)
        fp.write_bytes(uploaded_file.getvalue())
        data = parse_PE(tmp_file.name)
        #print(data)
        col = ['Machine',
        'SizeOfOptionalHeader',
        'Characteristics',
        'MajorSubsystemVersion',
        'Subsystem',
        'DllCharacteristics',
        'SectionsMeanEntropy',
        'SectionsMaxEntropy',
        'SizeOfStackCommit',
        'SizeOfStackReserve',
        'ImageBase',
        'CheckSum']
        if st.button('Run Diagnostics'):
            
            df = pd.DataFrame(np.array([data]).T,index=col,columns=['Values'])
            st.write(df)
            features = pd.DataFrame([data],columns=col)
            RFC_classifier = load('RFC000.joblib')
            judgment = RFC_classifier.predict(features)
            if judgment == 0:
                st.header('File is Malicious')
            else:
                st.header('File is Legitimate')
       
else:
    st.write('Upload a valid file')

